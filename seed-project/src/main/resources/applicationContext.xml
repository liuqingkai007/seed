<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"
		ignore-unresolvable="true" ignore-resource-not-found="true" />

	<!-- 扫描文件（自动将servicec层注入） -->
	<context:component-scan base-package="pw.entrance.seed.service" />

	<!-- 数据源配置 -->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc_url}</value>
		</property>
		<property name="username">
			<value>${jdbc_username}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>20</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>1</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>60000</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>3</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		name="sqlSessionFactory">
		<property name="dataSource" ref="druidDataSource"></property>
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		<!-- 分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=true
						</value>
					</property>
				</bean>
			</array>
		</property>
		<!-- 缓存参数 -->
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">true</prop>
				<!-- 查询时，关闭关联对象即时加载以提高性能 -->
				<prop key="lazyLoadingEnabled">true</prop>
				<!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
				<prop key="aggressiveLazyLoading">false</prop>
				<!-- 对于批量更新操作缓存SQL以提高性能 -->
				<prop key="defaultExecutorType">BATCH</prop>
				<!-- 数据库超过25000秒仍未响应则超时 -->
				<prop key="defaultStatementTimeout">25000</prop>
			</props>
		</property>
	</bean>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="pw.entrance.seed.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="druidDataSource" />
	</bean>

	<!-- 事务控制的业务方法配 tx:method 定义了事务传播级别，事务隔离级别，超时（秒），回滚与不回滚异常类型,是否只读(default 
		false) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="set*" propagation="NOT_SUPPORTED"
				read-only="true" isolation="DEFAULT" />

			<tx:method name="get*" propagation="SUPPORTS" read-only="true"
				isolation="DEFAULT" />
			<tx:method name="list*" propagation="SUPPORTS" read-only="true"
				isolation="DEFAULT" />
			<tx:method name="page*" propagation="SUPPORTS" read-only="true"
				isolation="DEFAULT" />
			<tx:method name="is*" propagation="SUPPORTS" read-only="true"
				isolation="DEFAULT" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"
				isolation="DEFAULT" />
			<tx:method name="search*" propagation="SUPPORTS" read-only="true"
				isolation="DEFAULT" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true"
				isolation="DEFAULT" />

			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />
			<tx:method name="create*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />
			<tx:method name="remove*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />
			<tx:method name="do*" propagation="REQUIRED" read-only="false"
				isolation="READ_COMMITTED" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务控制拦截 -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* pw.entrance.seed.service.impl.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
</beans>